① 利用 Python + opencv 拆解缺塊位置


## （1）利用 cv2 將圖片讀取到程式中

from matplotlib import pyplot as plt
import cv2

path = '~/Downloads/filename.png'
image = cv2.imread(path)
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB) # Converting BGR to RGB
plt.imshow(image)
plt.show()

## （2）判斷圖片中的物體邊緣輪廓

canny = cv2.Canny(image, 300, 300)
plt.imshow(canny)
plt.show()


## （3）取出缺塊所在的位置

contours, hierarchy = cv2.findContours(canny, cv2.RETR_CCOMP, cv2.CHAIN_APPROX_SIMPLE)  
dx, dy = 0, 0
for i, contour in enumerate(contours):
    x, y, w, h = cv2.boundingRect(contour)
    if (w > 50) and (h > 50):
        dx = x
        dy = y
    cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 255), 2)
    
plt.imshow(image)
plt.show()

# 最終就可以得到缺塊所在的位置是 dx 和 dy 兩個變數：

dx, dy # (202, 15)

## ② 利用 Python + Selenium 模擬滑動行為
## （1）打開瀏覽器前往網頁，下載原始圖片

from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.action_chains import ActionChains

browser = webdriver.Chrome('./chromedriver')

js_download_code = '''
    var link = document.createElement('a');
    link.download = 'filename.png';
    link.href = document.getElementById('captcha').getElementsByTagName("canvas")[0].toDataURL()
    link.click();
'''

browser.execute_script(js_download_code)


## 找出按鈕元素

## 使用 Selenium 輕鬆選取：
btn = browser.find_element_by_class_name("jigsaw__slider--ihcNg")


（2）模擬使用者拖拉方塊行為
## 最後一步，就可以利用剛剛找出來缺塊的位置及瀏覽器模擬的工具，把方塊移動到指定的偏移位置：


move = ActionChains(browser)
move.click_and_hold(btn)
move.move_by_offset(dx, 0)
move.perform()



